; EditorConfig to specify our own styles and standards
; Override customizations here to differ from root.

[*]
charset = utf-8

# Microsoft .NET properties
csharp_preferred_modifier_order = protected, public, private, internal, new, override, static, sealed, virtual, async, readonly, extern, unsafe, volatile, abstract, file, required:suggestion
csharp_space_after_cast = true
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_using_directive_placement = inside_namespace:silent
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:none
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion

# ReSharper properties
resharper_arguments_skip_single = true
resharper_autodetect_indent_settings = true
resharper_blank_lines_around_single_line_local_method = 1
resharper_braces_for_for = required
resharper_braces_for_foreach = required_for_multiline
resharper_braces_for_using = not_required
resharper_braces_for_while = required
resharper_braces_redundant = false
resharper_csharp_keep_blank_lines_in_code = 100
resharper_csharp_keep_blank_lines_in_declarations = 100
resharper_csharp_wrap_arguments_style = chop_if_long
resharper_enforce_line_ending_style = true
resharper_html_insert_final_newline = false
resharper_indent_pars = outside
resharper_indent_preprocessor_other = do_not_change
resharper_keep_existing_attribute_arrangement = true
resharper_keep_existing_declaration_block_arrangement = true
resharper_keep_existing_embedded_block_arrangement = true
resharper_keep_existing_expr_member_arrangement = false
resharper_keep_existing_initializer_arrangement = true
resharper_max_attribute_length_for_same_line = 70
resharper_max_initializer_elements_on_line = 1
resharper_nested_ternary_style = compact
resharper_parentheses_redundancy_style = remove
resharper_parentheses_same_type_operations = true
resharper_place_expr_accessor_on_single_line = true
resharper_place_expr_property_on_single_line = true
resharper_place_field_attribute_on_same_line = if_owner_is_single_line
resharper_place_method_attribute_on_same_line = if_owner_is_single_line
resharper_place_simple_anonymousmethod_on_single_line = false
resharper_place_simple_embedded_statement_on_same_line = true
resharper_resx_insert_final_newline = false
resharper_space_before_default_parentheses = false
resharper_space_before_trailing_comment = false
resharper_vb_insert_final_newline = false
resharper_wrap_after_declaration_lpar = true
resharper_wrap_array_initializer_style = chop_if_long
resharper_wrap_before_first_type_parameter_constraint = true
resharper_wrap_multiple_type_parameter_constraints_style = wrap_if_long
resharper_wrap_object_and_collection_initializer_style = chop_always
resharper_wrap_ternary_expr_style = wrap_if_long
resharper_xmldoc_insert_final_newline = false
resharper_xml_insert_final_newline = false
resharper_trailing_comma_in_multiline_lists = true
resharper_trailing_comma_in_singleline_lists = true
resharper_csharp_wrap_after_invocation_lpar = true
resharper_wrap_after_type_parameter_langle = true
resharper_wrap_chained_method_calls = chop_if_long
resharper_wrap_after_property_in_chained_method_calls = false
resharper_wrap_before_first_method_call = false

# ReSharper inspection severities
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_this_qualifier_highlighting = hint
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_built_in_type_reference_style_for_member_access_highlighting = hint
resharper_built_in_type_reference_style_highlighting = hint
resharper_redundant_base_qualifier_highlighting = warning
resharper_suggest_var_or_type_built_in_types_highlighting = hint
resharper_suggest_var_or_type_elsewhere_highlighting = hint
resharper_suggest_var_or_type_simple_types_highlighting = hint
resharper_local_variable_hides_member_highlighting = hint

[*.cs]
indent_size = 4

# StyleCop Analyzer
# SA1101: Prefix local calls with this
dotnet_diagnostic.SA1101.severity = warning

# SA1200: Using directives should be placed correctly
dotnet_diagnostic.SA1200.severity = none

# SA1633: File should have header
dotnet_diagnostic.SA1633.severity = silent

# SA1600: Elements should be documented
dotnet_diagnostic.SA1600.severity = silent

# SA1602: Enumeration items should be documented
dotnet_diagnostic.SA1602.severity = silent

# SA1604: Element documentation should have summary
dotnet_diagnostic.SA1604.severity = none

# SA1611: Element parameters should be documented
dotnet_diagnostic.SA1611.severity = none

# SA1615: Element return value should be documented
dotnet_diagnostic.SA1615.severity = none

# SA1618: Generic type parameters should be documented
dotnet_diagnostic.SA1618.severity = none

# SA1204: Static elements should appear before instance elements
dotnet_diagnostic.SA1204.severity = none

# SA1134: Attributes should not share line
dotnet_diagnostic.SA1134.severity = none

# SA1202: Elements should be ordered by access
dotnet_diagnostic.SA1202.severity = none

# SA1313: Parameter names should begin with lower-case letter
dotnet_diagnostic.SA1313.severity = suggestion

# SA1311: Static members should start with lower-case letter
dotnet_diagnostic.SA1311.severity = none

# VSTHRD200: Use Async suffix for async methods.
dotnet_diagnostic.VSTHRD200.severity = none

# SA1601: Partials must be documented.
dotnet_diagnostic.SA1601.severity = none

# CA1822: Make members static
dotnet_diagnostic.CA1822.severity = suggestion

dotnet_sort_system_directives_first = true
dotnet_style_require_accessibility_modifiers = always:warning

# ReSharper/Rider properties
resharper_align_linq_query = true
resharper_align_multline_type_parameter_constrains = true
resharper_apply_on_completion = true
resharper_blank_lines_after_control_transfer_statements = 1
resharper_blank_lines_around_single_line_auto_property = 1
resharper_blank_lines_around_single_line_property = 1
resharper_blank_lines_between_using_groups = 1
resharper_csharp_max_line_length = 140
resharper_csharp_new_line_before_while = true
resharper_csharp_stick_comment = false
resharper_csharp_wrap_after_declaration_lpar = true
resharper_csharp_wrap_before_first_type_parameter_constraint = true
resharper_csharp_wrap_multiple_type_parameter_constraints_style = chop_always
resharper_keep_existing_enum_arrangement = true
resharper_max_formal_parameters_on_line = 1
resharper_place_accessor_attribute_on_same_line = true
resharper_place_simple_embedded_statement_on_same_line = false
resharper_prefer_explicit_discard_declaration = true
resharper_space_after_cast = false
resharper_use_indent_from_vs = false
resharper_wrap_before_extends_colon = true
resharper_wrap_chained_binary_expressions = chop_if_long
resharper_keep_blank_lines_in_code = 1
resharper_csharp_keep_blank_lines_in_code = 1
resharper_csharp_keep_blank_lines_in_declarations = 1
resharper_csharp_blank_lines_before_single_line_comment = 1
resharper_csharp_blank_lines_between_using_groups = 1
resharper_csharp_blank_lines_around_type = 1
resharper_csharp_blank_lines_around_single_line_type = 1
resharper_csharp_blank_lines_around_property = 1
resharper_blank_lines_before_control_transfer_statements = 1
resharper_blank_lines_after_multiline_statements = 1

# ReSharper inspection severities
resharper_annotate_not_null_parameter_highlighting = warning
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_this_qualifier_highlighting = warning
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_bad_empty_braces_line_breaks_highlighting = warning
resharper_built_in_type_reference_style_for_member_access_highlighting = hint
resharper_built_in_type_reference_style_highlighting = hint
resharper_function_complexity_overflow_highlighting = warning
resharper_internal_members_must_have_comments_highlighting = none
resharper_invalid_xml_doc_comment_highlighting = hint
resharper_missing_xml_doc_highlighting = hint
resharper_private_members_must_have_comments_highlighting = none
resharper_public_members_must_have_comments_highlighting = none
resharper_suggest_discard_declaration_var_style_highlighting = suggestion
resharper_suggest_var_or_type_built_in_types_highlighting = hint
resharper_suggest_var_or_type_elsewhere_highlighting = hint
resharper_suggest_var_or_type_simple_types_highlighting = hint


# Formatting Options

# Indent switch case contents.
csharp_indent_case_contents = true
# Indent switch labels
csharp_indent_switch_labels = true

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true
csharp_new_line_before_members_in_object_initializers = true

#require NO space between a cast and the value
csharp_space_after_cast = false
#require a space before the colon for bases or interfaces in a type declaration
csharp_space_after_colon_in_inheritance_clause = true
#require a space after a keyword in a control flow statement such as a for loop
csharp_space_after_keywords_in_control_flow_statements = true
#remove space within empty argument list parentheses
csharp_space_between_method_call_empty_parameter_list_parentheses = false
#remove space between method call name and opening parenthesis
csharp_space_between_method_call_name_and_opening_parenthesis = false
#do not place space characters after the opening parenthesis and before the closing parenthesis of a method call
csharp_space_between_method_call_parameter_list_parentheses = false
#remove space within empty parameter list parentheses for a method declaration
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
#place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list.
csharp_space_between_method_declaration_parameter_list_parentheses = false


# Coding Styles

dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:none
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:none
dotnet_style_qualification_for_event = true:warning
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_method = true:warning
dotnet_style_qualification_for_property = true:warning
# Disallow throw expressions.
csharp_style_throw_expression = true:suggestion
# Prefer curly braces even for one line of code
csharp_prefer_braces = true:warning
#prefer expression-bodied members for accessors
csharp_style_expression_bodied_accessors = true:suggestion
#prefer block bodies for constructors - Only for one-liners
csharp_style_expression_bodied_constructors = false:silent
#prefer block bodies for methods - Only for one-liners
csharp_style_expression_bodied_methods = false:silent
#prefer expression-bodied members for properties
csharp_style_expression_bodied_properties = true:warning
#prefer out variables to be declared before the method call
csharp_style_inlined_variable_declaration = false:suggestion
#prefer default over default(T)
csharp_prefer_simple_default_expression = true:suggestion
#prefer objects to not be initialized using object initializers
dotnet_style_object_initializer = false:suggestion
#prefer local functions over anonymous functions
csharp_style_pattern_local_over_anonymous_function = true:suggestion
#leave statements and member declarations on the same line
csharp_preserve_single_line_statements = true


# Naming rules

# name all constant fields using PascalCase
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
dotnet_naming_symbols.constants_symbols.applicable_kinds = field
dotnet_naming_symbols.constants_symbols.required_modifiers = const

dotnet_naming_rule.private_constants_rule.severity = warning
dotnet_naming_rule.private_constants_rule.style = pascal_case_style
dotnet_naming_rule.private_constants_rule.symbols = constants_symbols
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constants_symbols
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style

# internal and private fields should be _camelCase
dotnet_naming_style.camel_case.capitalization = camel_case
dotnet_naming_symbols.private_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal
dotnet_naming_rule.camel_case_for_private_internal_fields.severity = suggestion
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style = camel_case

csharp_indent_labels = one_less_than_current
csharp_using_directive_placement = outside_namespace:suggestion
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_prefer_method_group_conversion = true:suggestion
csharp_style_prefer_top_level_statements = true:suggestion
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion

[*.{xml,config,*proj,nuspec,props,resx,targets,yml,tasks}]
indent_size = 2

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

[*.json]
indent_size = 2

[*.{ps1,psm1}]
indent_size = 4

[*.sh]
indent_size = 4
end_of_line = lf

[*.{razor,cshtml}]
charset = utf-8-bom

[*.{cs,vb}]

# SYSLIB1054: Use 'LibraryImportAttribute' instead of 'DllImportAttribute' to generate P/Invoke marshalling code at compile time
dotnet_diagnostic.syslib1054.severity = warning

# CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.ca1018.severity = warning

# CA1047: Do not declare protected member in sealed type
dotnet_diagnostic.ca1047.severity = warning

# CA1305: Specify IFormatProvider
dotnet_diagnostic.ca1305.severity = warning

# CA1507: Use nameof to express symbol names
dotnet_diagnostic.ca1507.severity = warning

# CA1510: Use ArgumentNullException throw helper
dotnet_diagnostic.ca1510.severity = warning

# CA1511: Use ArgumentException throw helper
dotnet_diagnostic.ca1511.severity = warning

# CA1512: Use ArgumentOutOfRangeException throw helper
dotnet_diagnostic.ca1512.severity = warning

# CA1513: Use ObjectDisposedException throw helper
dotnet_diagnostic.ca1513.severity = warning

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.ca1725.severity = suggestion

# CA1802: Use literals where appropriate
dotnet_diagnostic.ca1802.severity = warning

# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.ca1805.severity = warning

# CA1810: Do not initialize unnecessarily
dotnet_diagnostic.ca1810.severity = warning

# CA1821: Remove empty Finalizers
dotnet_diagnostic.ca1821.severity = warning

# CA1823: Avoid unused private fields
dotnet_diagnostic.ca1823.severity = warning

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.ca1825.severity = warning

# CA1826: Do not use Enumerable methods on indexable collections. Instead use the collection directly
dotnet_diagnostic.ca1826.severity = warning

# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.ca1827.severity = warning

# CA1828: Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.ca1828.severity = warning

# CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.ca1829.severity = warning

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.ca1830.severity = warning

# CA1831: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.ca1831.severity = warning

# CA1832: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.ca1832.severity = warning

# CA1833: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.ca1833.severity = warning

# CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.ca1834.severity = warning

# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.ca1835.severity = warning

# CA1836: Prefer IsEmpty over Count
dotnet_diagnostic.ca1836.severity = warning

# CA1837: Use 'Environment.ProcessId'
dotnet_diagnostic.ca1837.severity = warning

# CA1838: Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.ca1838.severity = warning

# CA1839: Use 'Environment.ProcessPath'
dotnet_diagnostic.ca1839.severity = warning

# CA1840: Use 'Environment.CurrentManagedThreadId'
dotnet_diagnostic.ca1840.severity = warning

# CA1841: Prefer Dictionary.Contains methods
dotnet_diagnostic.ca1841.severity = warning

# CA1842: Do not use 'WhenAll' with a single task
dotnet_diagnostic.ca1842.severity = warning

# CA1843: Do not use 'WaitAll' with a single task
dotnet_diagnostic.ca1843.severity = warning

# CA1844: Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.ca1844.severity = warning

# CA1845: Use span-based 'string.Concat'
dotnet_diagnostic.ca1845.severity = warning

# CA1846: Prefer AsSpan over Substring
dotnet_diagnostic.ca1846.severity = warning

# CA1847: Use string.Contains(char) instead of string.Contains(string) with single characters
dotnet_diagnostic.ca1847.severity = warning

# CA1852: Seal internal types
dotnet_diagnostic.ca1852.severity = warning

# CA1854: Prefer the IDictionary.TryGetValue(TKey, out TValue) method
dotnet_diagnostic.ca1854.severity = warning

# CA1855: Prefer 'Clear' over 'Fill'
dotnet_diagnostic.ca1855.severity = warning

# CA1856: Incorrect usage of ConstantExpected attribute
dotnet_diagnostic.ca1856.severity = error

# CA1857: A constant is expected for the parameter
dotnet_diagnostic.ca1857.severity = warning

# CA1858: Use 'StartsWith' instead of 'IndexOf'
dotnet_diagnostic.ca1858.severity = warning

# CA2007: Consider calling ConfigureAwait on the awaited task - Done automatically by ConfigureAway.Fody via weaving.
dotnet_diagnostic.ca2007.severity = none

# CS8618: Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable
dotnet_diagnostic.CS8618.severity = none

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.ca2008.severity = warning

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.ca2009.severity = warning

# CA2011: Avoid infinite recursion
dotnet_diagnostic.ca2011.severity = warning

# CA2012: Use ValueTask correctly
dotnet_diagnostic.ca2012.severity = warning

# CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.ca2013.severity = warning

# CA2014: Do not use stackalloc in loops.
dotnet_diagnostic.ca2014.severity = warning

# CA2016: Forward the 'CancellationToken' parameter to methods that take one
dotnet_diagnostic.ca2016.severity = warning

# CA2200: Rethrow to preserve stack details
dotnet_diagnostic.ca2200.severity = warning

# CA2201: Do not raise reserved exception types
dotnet_diagnostic.ca2201.severity = warning

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.ca2208.severity = warning

# CA2245: Do not assign a property to itself
dotnet_diagnostic.ca2245.severity = warning

# CA2246: Assigning symbol and its member in the same statement
dotnet_diagnostic.ca2246.severity = warning

# CA2249: Use string.Contains instead of string.IndexOf to improve readability.
dotnet_diagnostic.ca2249.severity = warning

# IDE0005: Remove unnecessary usings
dotnet_diagnostic.ide0005.severity = warning

# IDE0011: Curly braces to surround blocks of code
dotnet_diagnostic.ide0011.severity = warning

# IDE0020: Use pattern matching to avoid is check followed by a cast (with variable)
dotnet_diagnostic.ide0020.severity = warning

# IDE0029: Use coalesce expression (non-nullable types)
dotnet_diagnostic.ide0029.severity = warning

# IDE0030: Use coalesce expression (nullable types)
dotnet_diagnostic.ide0030.severity = warning

# IDE0031: Use null propagation
dotnet_diagnostic.ide0031.severity = warning

# IDE0035: Remove unreachable code
dotnet_diagnostic.ide0035.severity = warning

# IDE0036: Order modifiers
csharp_preferred_modifier_order = public, private, protected, internal, abstract, virtual, sealed, static, new, override, readonly, extern, unsafe, volatile, async:suggestion
dotnet_diagnostic.ide0036.severity = warning

# IDE0038: Use pattern matching to avoid is check followed by a cast (without variable)
dotnet_diagnostic.ide0038.severity = warning

# IDE0043: Format string contains invalid placeholder
dotnet_diagnostic.ide0043.severity = warning

# IDE0044: Make field readonly
dotnet_diagnostic.ide0044.severity = warning

# IDE0051: Remove unused private members
dotnet_diagnostic.ide0051.severity = warning

# IDE0055: All formatting rules
dotnet_diagnostic.ide0055.severity = suggestion

# IDE0059: Unnecessary assignment to a value
dotnet_diagnostic.ide0059.severity = warning

# IDE0060: Remove unused parameter
dotnet_code_quality_unused_parameters = non_public
dotnet_diagnostic.ide0060.severity = warning

# IDE0062: Make local function static
dotnet_diagnostic.ide0062.severity = warning

# IDE0161: Convert to file-scoped namespace
dotnet_diagnostic.ide0161.severity = warning

# IDE0200: Lambda expression can be removed
dotnet_diagnostic.ide0200.severity = warning

# IDE2000: Disallow multiple blank lines
dotnet_style_allow_multiple_blank_lines_experimental = false
dotnet_diagnostic.ide2000.severity = warning

[{**/Shared/**.cs,**/microsoft.extensions.hostfactoryresolver.sources/**.{cs,vb}}]
# IDE0005: Remove unused usings. Ignore for shared src files since imports for those depend on the projects in which they are included.
dotnet_diagnostic.ide0005.severity = silent
dotnet_style_operator_placement_when_wrapping = beginning_of_line
end_of_line = crlf
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_collection_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion

[*.{appxmanifest,asax,ascx,aspx,axml,build,c,c++,cc,cginc,compute,config,cp,cpp,cs,cshtml,csproj,css,cu,cuh,cxx,dbml,discomap,dtd,h,hh,hlsl,hlsli,hlslinc,hpp,htm,html,hxx,inc,inl,ino,ipp,js,json,jsproj,jsx,lsproj,master,mpp,njsproj,nuspec,proj,props,proto,razor,resjson,resw,resx,skin,StyleCop,targets,tasks,tpp,ts,tsx,usf,ush,vb,vbproj,xaml,xamlx,xml,xoml,xsd}]
indent_size = 4
tab_width = 4
